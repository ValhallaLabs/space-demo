extends layout
block content
    script(type='text/javascript' src='javascripts/three.min.js')
    script(type='text/javascript' src='javascripts/controls/OrbitControls.js')
    script.
        var camera, controls, scene, renderer, planet;
        init();
        animate();

        function init() {
            scene = new THREE.Scene();

            renderer = new THREE.WebGLRenderer();
            renderer.setClearColor("rgb(0,0,0)");
            renderer.setPixelRatio(window.devicePixelRatio);
            renderer.setSize(window.innerWidth, window.innerHeight);

            document.body.appendChild(renderer.domElement);

            camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 1, 1000);

            controls = new THREE.OrbitControls(camera, renderer.domElement);
            controls.minDistance = 20;
            controls.autoRotate = true;
            controls.autoRotateSpeed = 1;
            controls.maxDistance = 190;
            controls.enableZoom = true;
            controls.enablePan = false;


            var sun = new THREE.SphereGeometry(5, 20, 20);
            var material = new THREE.MeshPhongMaterial();
            material.map = THREE.ImageUtils.loadTexture('images/planets/sunmap.jpg');
            var sunMesh = new THREE.Mesh(sun, material);
            sunMesh.position.x = 0;
            sunMesh.position.y = 0;
            sunMesh.position.z = 0;

            scene.add(sunMesh);

            var planetGeometry = new THREE.SphereGeometry(1, 20, 20);

            //Load the planet textures
            var texture = THREE.ImageUtils.loadTexture("images/planet-512.jpg");
            var normalmap = THREE.ImageUtils.loadTexture("images/normal-map-512.jpg");
            var specmap = THREE.ImageUtils.loadTexture("images/water-map-512.jpg");

            //            var planetMaterial = new THREE.MeshPhongMaterial({
            //                mao: texture,
            //                specularMap: specmap,
            //                specular: new THREE.Color(0xff0000),
            //                shininess: 1,
            //                normalMap: normalmap
            //            });

            var planetMaterial = new THREE.MeshPhongMaterial();

            planetMaterial.map = texture;
            planetMaterial.specularMap = specmap;
            planetMaterial.specular = new THREE.Color(0xff0000);
            planetMaterial.shininess = 1;
            planetMaterial.normalMap = normalmap;
            planetMaterial.normalScale.set(-0.3, -0.3);

            planet = new THREE.Mesh(planetGeometry, planetMaterial);

            planet.material.map.wrapS = THREE.RepeatWrapping;
            planet.material.map.wrapT = THREE.RepeatWrapping;
            planet.material.normalMap.wrapS = THREE.RepeatWrapping;
            planet.material.normalMap.wrapT = THREE.RepeatWrapping;
            planet.material.specularMap.wrapS = THREE.RepeatWrapping;
            planet.material.specularMap.wrapT = THREE.RepeatWrapping;


            planet.material.map.repeat.set(2, 1);
            planet.material.normalMap.repeat.set(2, 1);
            planet.material.specularMap.repeat.set(2, 1);

            planet.position.x = 100;
            planet.position.y = 0;
            planet.position.z = 0;

            scene.add(planet);


            //Space background is a large sphere
            var spaceSphereGeometry = new THREE.SphereGeometry(200, 20, 20);
            var spaceSphereMaterial = new THREE.MeshBasicMaterial(
                {
                    map: THREE.ImageUtils.loadTexture('images/galaxy_starfield.png'),
                    overdraw: 0.5
                });


            var spaceSphere = new THREE.Mesh(spaceSphereGeometry, spaceSphereMaterial);

            //spacesphere needs to be double sided as the camera is within the spacesphere
            spaceSphere.material.side = THREE.DoubleSide;

            spaceSphere.material.map.wrapS = THREE.RepeatWrapping;
            spaceSphere.material.map.wrapT = THREE.RepeatWrapping;
            spaceSphere.material.map.repeat.set(5, 3);

            spaceSphere.material.shininess = 1;
            spaceSphere.material.fog = false;

            scene.add(spaceSphere);

            //position camera
            camera.position.x = 0;
            camera.position.y = 0;
            camera.position.z = -15;
            camera.lookAt(scene.position);

            light = new THREE.DirectionalLight(0xffffff);
            light.position.set(1, 1, 1);
            scene.add(light);
            light = new THREE.DirectionalLight(0x002288);
            light.position.set(-1, -1, -1);
            scene.add(light);
            light = new THREE.AmbientLight(0x222222);
            scene.add(light);

            var light = new THREE.PointLight(0xffffff, 10, 50, 2);
            light.position.set(0, 0, 0);
            scene.add(light);

            window.addEventListener('resize', onWindowResize, false);
        }
        function onWindowResize() {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
        }
        function animate() {
            requestAnimationFrame(animate);
            controls.update(); // required if controls.enableDamping = true, or if controls.autoRotate = true
            render();
        }
        function render() {
            planet.rotation.y += 0.002;
            renderer.render(scene, camera);
        }
