extends layout
block content
    script(type='text/javascript' src='javascripts/three.min.js')
    script(type='text/javascript' src='javascripts/controls/OrbitControls.js')
    script.
        var scene = new THREE.Scene();
        var camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 1000);


        // Reposition the camera
        camera.position.set(5, 5, 0);

        // Point the camera at a given coordinate
        camera.lookAt(new THREE.Vector3(0, 0, 0));


        var renderer = new THREE.WebGLRenderer({antialias: true});
        renderer.setSize(window.innerWidth, window.innerHeight);

        // Set a near white clear color (default is black)
        renderer.setClearColor(0xfff6e6);

        document.body.appendChild(renderer.domElement);


        // A mesh is created from the geometry and material, then added to the scene
        var plane = new THREE.Mesh(
            new THREE.PlaneGeometry(5, 5, 5, 5),
            new THREE.MeshBasicMaterial({color: 0x393839, wireframe: true})
        );
        plane.rotateX(Math.PI / 2);
        scene.add(plane);

        // Render the scene/camera combination
        renderer.render(scene, camera);


        // Add an orbit control which allows us to move around the scene. See the three.js example for more details
        // https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/OrbitControls.
        var controls = new THREE.OrbitControls(camera, renderer.domElement);
        controls.addEventListener('change', function () {
            renderer.render(scene, camera);
        }); // add this only if there is no animation loop (requestAnimationFrame)

//      function animate() {
//          requestAnimationFrame(animate);
//          controls.update(); // required if controls.enableDamping = true, or if controls.autoRotate = true
//          render();
//      }
//
//      function render() {
//          requestAnimationFrame(render);
//          cube.rotation.x += 0.05;
//          cube.rotation.y += 0.03;
//          renderer.render(scene, camera);
//      }
//
//      render();
//      animate();